name: CI Pipeline
run-name: CI Pipeline
on:
  workflow_call:
    inputs:
      component:
        required: true
        type: string
      appType:
        required: true
        type: string
    secrets:
      VAULT_TOKEN:
        required: true
jobs:
    code-checkout:
      runs-on: self-hosted
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4
          with:
            repository: raghudevopsb82/roboshop-${{ inputs.component }}


    app-dependencies:
      runs-on: self-hosted
      needs: code-checkout
      steps:
        - name: Download Dependency
          run: |
            if [ ${{ inputs.appType }} == maven ]; then
              mvn clean package
            elif [ ${{ inputs.appType }} == nodejs ];then
              npm install
            elif [ ${{ inputs.appType }} == python ]; then
              pip3 install -r requirements.txt
            fi

    code-quality:
      runs-on: self-hosted
      needs: app-dependencies
      steps:
        - name: Retrieve Vault Secrets
          id: import-secrets
          uses: hashicorp/vault-action@v2
          with:
            url: http://vault-internal.azdevopsb82.online:8200
            token: ${{ secrets.VAULT_TOKEN }}
            secrets: |
              infra/github-actions *;
        - name: Code submit sonar scanner
          run: |
            echo /opt/sonar-scanner-6.2.1.4610-linux-x64/bin/sonar-scanner -Dsonar.host.url=http://sonarqube-internal.azdevopsb82.online:9000 -Dsonar.token=${{ steps.import-secrets.outputs.sonar_token }} -Dsonar.projectKey=${{ inputs.component }} -Dsonar.qualitygate.wait=true >/tmp/1
            env >>/tmp/1
            exit 1

    unit-tests:
      runs-on: self-hosted
      needs: code-quality
      steps:
        - name: Download Dependency
          run: ls -l

    build-container-image:
      runs-on: self-hosted
      needs: unit-tests
      steps:
        - name: Download Dependency
          run: ls -l

    push-to-image-registry:
      runs-on: self-hosted
      needs: build-container-image
      steps:
        - name: Download Dependency
          run: ls -l





